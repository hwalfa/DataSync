<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">
    <context:component-scan base-package="cn.csdb.drsr">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <!-- 将多个配置文件读取到容器中，交给Spring管理 -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:jdbc.properties</value>
                <value>classpath:cas_urls.properties</value>
            </list>
        </property>
    </bean>

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${db.url}"/>
        <property name="username" value="${db.username}"/>
        <property name="password" value="${db.password}"/>
        <property name="initialSize" value="${druid.initialSize}"/>
        <property name="minIdle" value="${druid.minIdle}"/>
        <property name="maxActive" value="${druid.maxActive}"/>
        <property name="maxWait" value="${druid.maxWait}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${druid.timeBetweenEvictionRunsMillis}"/>
        <property name="minEvictableIdleTimeMillis" value="${druid.minEvictableIdleTimeMillis}"/>
        <property name="validationQuery" value="${druid.validationQuery}"/>
        <property name="testWhileIdle" value="${druid.testWhileIdle}"/>
        <property name="testOnBorrow" value="${druid.testOnBorrow}"/>
        <property name="testOnReturn" value="${druid.testOnReturn}"/>
        <property name="poolPreparedStatements" value="${druid.poolPreparedStatements}"/>
        <property name="maxPoolPreparedStatementPerConnectionSize"
                  value="${druid.maxPoolPreparedStatementPerConnectionSize}"/>
        <property name="filters" value="${druid.filters}"/>
    </bean>
    <!--<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${db.driver}"/>
        <property name="jdbcUrl" value="${db.url}"/>
        <property name="user" value="${db.username}"/>
        <property name="password" value="${db.password}"/>
        &lt;!&ndash;连接池用尽时，一次获取的连接数&ndash;&gt;
        <property name="acquireIncrement" value="5"/>
        &lt;!&ndash;尝试获取连接的次数&ndash;&gt;
        <property name="acquireRetryAttempts" value="10"/>
        &lt;!&ndash;尝试获取连接的间隔时间&ndash;&gt;
        <property name="acquireRetryDelay" value="2000"/>
        &lt;!&ndash;初始化连接数&ndash;&gt;
        <property name="initialPoolSize" value="10"/>
        &lt;!&ndash;检查连接池中的空闲连接周期&ndash;&gt;
        <property name="idleConnectionTestPeriod" value="60"/>
        &lt;!&ndash;连接未被使用丢弃的时间&ndash;&gt;
        <property name="maxIdleTime" value="60"/>
        &lt;!&ndash;连接池保留的最大连接数&ndash;&gt;
        <property name="maxPoolSize" value="20"/>
        &lt;!&ndash;验证连接是否有效的sql语句&ndash;&gt;
        <property name="preferredTestQuery" value="select count(*) from DUAL"/>
        <property name="testConnectionOnCheckin" value="true"/>
        <property name="maxStatementsPerConnection" value="10"/>
    </bean>-->



    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <bean id="simpleClientHttpRequestFactory" class="org.springframework.http.client.SimpleClientHttpRequestFactory">
        <property name="connectTimeout" value="60000"/>
        <property name="readTimeout" value="600000"/>
    </bean>
    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
        <constructor-arg ref="simpleClientHttpRequestFactory"/>
        <property name="messageConverters">
            <array>
                <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                    <property name="charset" value="utf-8"/>
                    <property name="supportedMediaTypes">
                        <list>
                            <value>application/json;charset=utf-8</value>
                        </list>
                    </property>
                    <property name="features">
                        <array>
                            <value>WriteMapNullValue</value>
                            <value>WriteNullStringAsEmpty</value>
                        </array>
                    </property>
                </bean>
            </array>
        </property>
    </bean>
    <import resource="system-config.xml"/>
    <!-- 缓存配置文件 -->
    <!--<import resource="spring-cache.xml"/>-->
    <!-- 权限控制配置文件  -->
    <!--<import resource="spring-shiro.xml"/>-->
</beans>